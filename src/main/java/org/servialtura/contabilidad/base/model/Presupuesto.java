package org.servialtura.contabilidad.base.model;

// default package
// Generated 18-dic-2016 13:04:56 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.servialtura.contabilidad.base.enums.EstadoPresupuestoEnum;

/**
 * Presupuesto generated by hbm2java
 */
@Entity
@Table(name = "PRESUPUESTO", catalog = "SERVIALTURA")
public class Presupuesto implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7559442234637997116L;
	private Integer idPresupuesto;
	private EstadoPresupuestoEnum estadoPresupuesto;
	private BigDecimal importePresupuesto;
	private Boolean tieneFacturaSuplidos;
	private Date fechaSolicitud;
	private Date fechaCreacion;
	private String descripcionSolicitud;
	private String emailContacto;
	private String personaContacto;
	private String telefonoContacto;
	private String numeroPresupuesto;
	private Empresa cliente;
	private List<Partida> partidas = new ArrayList<Partida>();
	private List<MaterialesPresupuesto> materialesPresupuestos = new ArrayList<MaterialesPresupuesto>();

	public Presupuesto() {
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cliente")
	public Empresa getCliente() {
		return this.cliente;
	}

	public void setCliente(Empresa cliente) {
		this.cliente = cliente;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idPresupuesto", unique = true, nullable = false)
	public Integer getIdPresupuesto() {
		return this.idPresupuesto;
	}

	public void setIdPresupuesto(Integer idPresupuesto) {
		this.idPresupuesto = idPresupuesto;
	}

	@Enumerated(EnumType.STRING)
	@Column(name = "estado_presupuesto", length=20 )
	public EstadoPresupuestoEnum getEstadoPresupuesto() {
		return this.estadoPresupuesto;
	}

	public void setEstadoPresupuesto(EstadoPresupuestoEnum estadoPresupuesto) {
		this.estadoPresupuesto = estadoPresupuesto;
	}

	@Column(name = "importe_presupuesto", precision = 38)
	public BigDecimal getImportePresupuesto() {
		return this.importePresupuesto;
	}

	public void setImportePresupuesto(BigDecimal importePresupuesto) {
		this.importePresupuesto = importePresupuesto;
	}

	@Column(name = "tiene_factura_suplidos")
	public Boolean getTieneFacturaSuplidos() {
		return this.tieneFacturaSuplidos;
	}

	public void setTieneFacturaSuplidos(Boolean tieneFacturaSuplidos) {
		this.tieneFacturaSuplidos = tieneFacturaSuplidos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_solicitud", length = 19)
	public Date getFechaSolicitud() {
		return this.fechaSolicitud;
	}

	public void setFechaSolicitud(Date fechaSolicitud) {
		this.fechaSolicitud = fechaSolicitud;
	}

	@Column(name = "descripcion_solicitud")
	public String getDescripcionSolicitud() {
		return this.descripcionSolicitud;
	}

	public void setDescripcionSolicitud(String descripcionSolicitud) {
		this.descripcionSolicitud = descripcionSolicitud;
	}

	@Column(name = "email_contacto")
	public String getEmailContacto() {
		return this.emailContacto;
	}

	public void setEmailContacto(String emailContacto) {
		this.emailContacto = emailContacto;
	}

	@Column(name = "persona_contacto")
	public String getPersonaContacto() {
		return this.personaContacto;
	}

	public void setPersonaContacto(String personaContacto) {
		this.personaContacto = personaContacto;
	}
	
	@Column(name = "numero_presupuesto")
	public String getNumeroPresupuesto() {
		return this.numeroPresupuesto;
	}

	public void setNumeroPresupuesto(String numeroPresupuesto) {
		this.numeroPresupuesto = numeroPresupuesto;
	}

	@Column(name = "telefono_contacto")
	public String getTelefonoContacto() {
		return this.telefonoContacto;
	}

	public void setTelefonoContacto(String telefonoContacto) {
		this.telefonoContacto = telefonoContacto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "presupuesto")
	public List<Partida> getPartidas() {
		return this.partidas;
	}

	public void setPartidas(List<Partida> partidas) {
		this.partidas = partidas;
	}
	
//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name="MATERIALES_PRESUPUESTO", 
//	joinColumns={@JoinColumn(name="idPresupuesto")}, 
//	inverseJoinColumns={@JoinColumn(name="idMaterial")})
//	public List<Material> getMateriales() {
//		return this.materiales;
//	}
//
//	public void setMateriales(List<Material> materiales) {
//		this.materiales = materiales;
//	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "presupuesto")
	public List<MaterialesPresupuesto> getMaterialesPresupuestos() {
		return this.materialesPresupuestos;
	}

	public void setMaterialesPresupuestos(List<MaterialesPresupuesto> materialesPresupuestos) {
		this.materialesPresupuestos = materialesPresupuestos;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idPresupuesto == null) ? 0 : idPresupuesto.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Presupuesto))
			return false;
		Presupuesto other = (Presupuesto) obj;
		if (idPresupuesto == null) {
			if (other.getIdPresupuesto() != null)
				return false;
		} else if (!idPresupuesto.equals(other.getIdPresupuesto()))
			return false;
		return true;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_creation", length = 19)
	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

}
